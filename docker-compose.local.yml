volumes:
  backend_local_postgres_data: {}
  backend_local_postgres_data_backups: {}
  backend_local_redis_data: {}
  backend_local_minio_data: {}
  backend_local_grafana_data: {}
  static_volume: {}
  media_volume: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: backend_local_django
    container_name: backend_local_django
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app:z
      - static_volume:/app/staticfiles
      - media_volume:/app/backend/media
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - '8000:8000'
    command: /start

  nginx:
    build:
      context: .
      dockerfile: ./compose/local/nginx/Dockerfile
    image: backend_local_nginx
    container_name: backend_local_nginx
    depends_on:
      - django
    volumes:
      - ./frontend/dist:/app/frontend:ro
      - static_volume:/app/backend/static:ro
      - media_volume:/app/backend/media:ro
      - ./compose/local/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: backend_production_postgres
    container_name: backend_local_postgres
    volumes:
      - backend_local_postgres_data:/var/lib/postgresql/data
      - backend_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  redis:
    image: redis:6
    container_name: backend_local_redis
    volumes:
      - backend_local_redis_data:/data

  celeryworker:
    <<: *django
    image: backend_local_celeryworker
    container_name: backend_local_celeryworker
    depends_on:
      - redis
      - postgres
    env_file:
      - ./.envs/.local/.django
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: backend_local_celerybeat
    container_name: backend_local_celerybeat
    depends_on:
      - redis
      - postgres
    env_file:
      - ./.envs/.local/.django
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: backend_local_flower
    container_name: backend_local_flower
    env_file:
      - ./.envs/.local/.flower
      - ./.envs/.local/.django
    ports:
      - '5555:5555'
    command: /start-flower

  minio:
    image: minio/minio:latest
    container_name: backend_local_minio
    env_file:
      - ./.envs/.local/.minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - backend_local_minio_data:/data
    command: server /data --console-address ":9001"

  prometheus:
    image: prom/prometheus:latest
    container_name: backend_local_prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: backend_local_grafana
    env_file:
      - ./.envs/.local/.grafana
    ports:
      - "3000:3000"
    volumes:
      - backend_local_grafana_data:/var/lib/grafana

  node-exporter:
    image: prom/node-exporter:latest
    container_name: backend_local_node_exporter
    restart: unless-stopped
    ports:
      - "9100:9100"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: backend_local_cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8080:8080"

  locust:
    image: locustio/locust:latest
    container_name: backend_local_locust
    depends_on:
      - django
    env_file:
      - ./.envs/.local/.locust
    volumes:
      - ./compose/local/locust:/mnt/locust
    working_dir: /mnt/locust
    command:
      - -f
      - locustfile.py
      - --host=http://django:8000
      - --web-port=8089
    ports:
      - "8089:8089"
